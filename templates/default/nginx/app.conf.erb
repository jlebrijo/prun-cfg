upstream <%= @app%> {
  server     localhost:<%= @port%>;
}


<%if node['ngx_leaky_bucket_vhosts'] && (leaky_conf = node['ngx_leaky_bucket_vhosts']["#{@app}"])%>
  limit_req_zone $binary_remote_addr zone=<%= @app%>:<%= leaky_conf['mem']%> rate=<%= leaky_conf['rate']%>;
<%end%>

server {
  server_name <%= @app%>.<%= @domain%>;
  root /var/www/<%= @app%>/current/public;

  <% if node["ssl_apps"] && node["ssl_apps"].include?(@app) %>
    listen       *:443 ssl;
    ssl on;
    ssl_certificate /etc/nginx/ssl/<%= @app%>.<%= @domain%>.crt;
    ssl_certificate_key /etc/nginx/ssl/<%= @app%>.<%= @domain%>.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  <% end%>

  location @<%= @app%> {
    proxy_pass          http://<%= @app%>;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_read_timeout  90;
    <% if node["ssl_apps"] && node["ssl_apps"].include?(@app) %>
      proxy_set_header X-Forwarded-Proto https;
    <% end%>
    <% if leaky_conf %>
      limit_req zone=<%= @app%> <%= "burst=#{leaky_conf['burst']}" if leaky_conf['burst']%> <%= "nodelay" if leaky_conf['nodelay']%>;
    <%end%>
  }
  location / {
    try_files  $uri  @<%= @app%> ;
    index  index.html index.htm index.php;
  }
  location /status {
    stub_status on;
    allow all;
  }
}

<% if node["ssl_apps"] && node["ssl_apps"].include?(@app) %>
  server {
    server_name <%= @app%>.<%= @domain%>;
    location / {
      rewrite ^ https://$server_name$request_uri? permanent;
    }
  }
<% end%>